@model EventManager1.Models.RegisterUser_
@using EventManager1.Models;
@{
    Layout = null;
    ViewBag.Title = "Register";
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="~/images/fav.png" type="image/gif">
    <link rel="stylesheet" href="~/vendors/iconfonts/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="~/vendors/css/vendor.bundle.base.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/custom.css">
    <link href="~/css/alertify.core.css" rel="stylesheet" />
    <link href="~/css/alertify.default.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.9/dist/css/bootstrap-select.min.css" />
    <style>
        .form-control {
            padding: 0.275rem 1.175rem !important;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            margin: 0;
        }

        .bgimg {
            background-image: url(../images/bg.png);
            background-size: cover;
            background-repeat: no-repeat;
        }

        span.field-validation-valid.error {
            display: none;
        }

        .error {
            color: red;
            padding: 5px 10px
        }

        .content-wrapper {
            background: transparent;
            padding: 0;
        }

        .auth .brand-logo {
            margin-bottom: 10px;
        }

        .auth .auth-form-light {
            border-radius: 25px;
        }

        .auth form .form-group .form-control,
        select.form-control {
            border-radius: 20px;
            border-color: #ccc;
            border: 1px solid;
            outline: none;
            color: #495057;
        }

        .auth form .auth-form-btn,
        .btn-Round {
            border-radius: 30px;
        }

        .w-75 {
            width: 75%;
        }

        .auth form .form-group {
            margin-bottom: .5rem;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.9/dist/css/bootstrap-select.min.css" />
}

@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()*@
<div class="container-scroller bgimg">
    <div class="container-fluid page-body-wrapper full-page-wrapper">
        <div class="content-wrapper d-flex align-items-center auth">
            <div class="row w-100" style="margin:20px 0">
                <div class="col-lg-4 mx-auto">
                    <div class="auth-form-light text-left p-5">
                        <div class="brand-logo" >
                            <!-- <img src="../../images/logo.svg"> -->
                            <span class="d-inline-block">
                                <a href="/"
                                   class="btn btn-inverse-primary btn-rounded btn-icon icon-center" style="float: left;">
                                     <i class="mdi mdi-arrow-left-drop-circle-outline "></i>
                                    @*<img src="~/images/rovermanLogo.png" style="width:120px; text-align:center" />*@
                                </a>
                                <b style="margin-top: 6px;display: inline-block; margin-left: 10px;">
                                    Stream233
                                </b>
                            </span>

                        </div>
                        <h4>New here?</h4>
                        <h6 class="font-weight-light">Signing up is easy. It only takes a few steps</h6>
                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { onsubmit = "return checkFunction()" })) 
                        {@Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required", placeholder = "First Name" })
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required", placeholder = "Last Name" })

                            </div>
                        </div>
                        <div>@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "error" }) @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "error" })</div>


                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", type = "email", required = "required", placeholder = "Email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "error" })

                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control form-control-lg", type = "number", required = "required", placeholder = "Phone number" })
                            @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "error" })
                        </div>
                        <div class="form-group">
                            @*<select name="CountryId" id="CountryId" class="selectpicker form-control" data-show-subtext="false" data-live-search="true" onchange="OnEventChange(this)">
                                    <option value="select">Select a country </option>
                                    @{

                                        foreach (var item in Model.Country)
                                        {
                                            <option value="@item.Id">@item.Text</option>
                                        }
                                    }
                                </select>*@
                            @Html.DropDownListFor(M => M.CountryId, new SelectList(Model.Country, "Id", "Text"), new { @class = " form-control" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "Password", type = "password", required = "required" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "error" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.ConfPassword, new { @class = "form-control form-control-lg", placeholder = "Confirm Password", type = "password", required = "required" })
                            @Html.ValidationMessageFor(m => m.ConfPassword, "", new { @class = "error" })
                        </div>
                        <div class="mb-4">
                            <div class="form-check">
                                <label class="form-check-label text-muted">
                                    <input type="checkbox" class="form-check-input" id="chkTerm" checked="checked" style="opacity: 1; height:21px">

                                </label> &nbsp; &nbsp;  &nbsp; I agree to all <a href="~/Home/Terms" target="_blank"> Terms & Conditions </a>

                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="submit" class="btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn" id="Register">SIGN UP</button>
                        </div>
                    }
                        @*<hr class="my-3">
                            <div class="text-center">
                                <button class="btn-block btn btn-google text-uppercase btn-Round" type="submit">
                                    <i class="fab fa-google mr-2"></i>
                                    Sign in with Google
                                </button>
                                <br>
                                <button class="btn-block btn btn-facebook text-uppercase btn-Round" type="submit">
                                    <i class="fab fa-facebook-f mr-2"></i>Sign in with Facebook
                                </button>
                                <br>
                                <button class="btn-block btn btn-danger text-uppercase btn-Round" type="submit">
                                    <i class="fab fa-facebook-f mr-2"></i>Sign in with Instgram
                                </button>
                            </div>*@
                        <hr class="my-3">
                        <div class="text-center mt-5 font-weight-light">
                            Already have an account? <a href="@Url.Action("Login","Account")" class="text-primary">Login</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- content-wrapper ends -->
    </div>
    <!-- page-body-wrapper ends -->
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.9/dist/js/bootstrap-select.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/js/alertify.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
        integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
        crossorigin="anonymous"></script>
<link href="~/css/JqueryUI.css" rel="stylesheet" />
<script>
    function checkFunction() {
        debugger; 
    if ($("#chkTerm").prop('checked') == false) {
        alertify.alert("Please check the box of Terms & Conditions to continue.")
        return false;
        }
    }
</script>
@{
    if (Model != null && Model.Error != null && Model.Error.Code != (int)ApiResponseCode.ok)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                alertify.alert("@Model.Error.Msg");
            })
        </script>
    }
}